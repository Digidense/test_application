name: Deploy Application to EKS

on:
  push:
    branches:
      - development

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Update kubeconfig
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME }} --region us-east-1

    - name: Get nodes
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: kubectl get nodes

    - name: Get services
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: kubectl get svc

    - name: Get namespaces
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: kubectl get ns

    - name: Create deployment 
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: |
          kubectl apply -f deployment.yaml
          
    - name: Create HTTP-service
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: |
          kubectl apply -f http-service.yaml
          
    - name: Get services
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: kubectl get svc 

    - name: Create Pod Disruption Budget
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: |
          kubectl apply -f pdb.yaml

    - name: Create ingress service 
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: |
          kubectl apply -f ingress.yaml

    - name: Get ingress details
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: kubectl get ingress 
        
    - name: Create Horizontal Pod Autoscaler
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: |
          kubectl apply -f hpa.yaml

    - name: Create Metrics Server
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

    - name: Get Horizontal Pod Autoscaler
      env:
        KUBECONFIG: ${{ github.workspace }}/.kube/config
      run: kubectl get hpa 
